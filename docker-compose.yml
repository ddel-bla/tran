services:
  db:
    build: ./postgres
    container_name: postgres
    env_file:
      - ./postgres/conf/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-42:
    build: ./auth-42
    container_name: auth-42
    command: sh -c "
      python manage.py makemigrations api &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    env_file:
      - auth-42/.env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  auth-local:
    build: ./auth-local 
    container_name: auth-local 
    command: sh -c "
      python manage.py makemigrations api &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8001"
    env_file:
      - auth-local/.env
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  frontend:
    build: ./frontend
    container_name: apache-web
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - auth-42
      - auth-local
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app_network
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    networks:
      - app_network
    depends_on:
      - prometheus

volumes:
  postgres_data:
  grafana_data:

networks:
  app_network:
    driver: bridge
